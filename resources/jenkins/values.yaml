# Default values for jenkins.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value

Master:
  ImageTag: lts-alpine
  ServiceType: ClusterIP
  resources:
    requests:
      memory: "2Gi"
    limits:
      memory: "2Gi"
  InstallPlugins:
      - kubernetes:1.14.9
      - workflow-job:2.32
      - workflow-aggregator:2.6
      - kubernetes-pipeline-devops-steps:1.6
      - kubernetes-pipeline-steps:1.6
      - credentials-binding:1.18
      - git:3.9.3
      - amazon-ecr:1.6
      - google-oauth-plugin:0.7
      - google-container-registry-auth:0.3
      - bitbucket:1.1.8
      - slack:2.19
      - Parameterized-Remote-Trigger:3.0.7
# Used to approve a list of groovy functions in pipelines used the script-security plugin. Can be viewed under /scriptApproval
  ScriptApproval:
     - staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods invokeMethod java.lang.Object java.lang.String java.lang.Object
     - method java.lang.String getBytes
     - staticMethod org.codehaus.groovy.runtime.EncodingGroovyMethods encodeBase64 byte[]
     - staticMethod org.codehaus.groovy.runtime.EncodingGroovyMethods decodeBase64 java.lang.String

  #   - "method groovy.json.JsonSlurperClassic parseText java.lang.String"
  #   - "new groovy.json.JsonSlurperClassic"
# List of groovy init scripts to be executed during Jenkins master start
  InitScripts:
     - |
        import org.jenkinsci.plugins.workflow.libs.*;
        import jenkins.plugins.git.GitSCMSource;
        import java.util.Collections;

        GlobalLibraries globalLibraries = GlobalLibraries.get();

        LibraryConfiguration shLibrary = new LibraryConfiguration("github.com/SprintHive/sprinthive-pipeline-library", new SCMSourceRetriever(new GitSCMSource(null, "https://github.com/SprintHive/sprinthive-pipeline-library.git", "", "origin", "+refs/heads/*:refs/remotes/origin/*", "*", "", true)));
        shLibrary.setDefaultVersion("master");
        shLibrary.setAllowVersionOverride(true);

        globalLibraries.setLibraries(Collections.singletonList(shLibrary));
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: kong
      kubernetes.io/tls-acme: "true"

Agent:
  ImageTag: alpine

Persistence:
  Size: 5Gi

rbac:
  install: true
